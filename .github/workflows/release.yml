name: Release

on:
  workflow_dispatch:

env:
  CI: 1
  ARTIFACT_DIR: ./artifacts

jobs:
  pre-release-check:
    name: Publish configs (Precheck)
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
          with:
            token: ${{ secrets.GH_TOKEN }}
            fetch-depth: 0

        - uses: ./.github/actions/detect-env

        - name: Setup Node.js
          uses: actions/setup-node@v2
          with:
            node-version: ${{ env.NODE_VERSION }}

        - name: Create artifacts directory
          run: mkdir -p ${{ env.ARTIFACT_DIR }}

        - name: Restore yarn cache
          id: yarn-cache
          uses: actions/cache@v2
          with:
            path: |
              ./.yarn
              .pnp.*
            key: ${{ env.NODE_VERSION }}-${{ env.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}

        - name: Install dependencies
          run: |
            yarn install --immutable

        - name: Build
          run: yarn build

        - name: Configure Git
          run: |
            git config --global user.name rajzik-bot
            git config --global user.email silhanu+releasebot@gmail.com
            git config --global init.defaultBranch main

        - name: Tests
          run: yarn test

  release:
    name: Publish configs
    runs-on: ubuntu-latest
    needs: [pre-release-check]
    steps:
        - uses: actions/checkout@v2
          with:
            token: ${{ secrets.GH_TOKEN }}
            fetch-depth: 0

        - uses: ./.github/actions/detect-env

        - name: Setup Node.js
          uses: actions/setup-node@v2
          with:
            node-version: ${{ env.NODE_VERSION }}

        - name: Create artifacts directory
          run: mkdir -p ${{ env.ARTIFACT_DIR }}

        - name: Restore yarn cache
          id: yarn-cache
          uses: actions/cache@v2
          with:
            path: |
              ./.yarn
              .pnp.*
            key: ${{ env.NODE_VERSION }}-${{ env.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}

        - name: Install dependencies
          run: yarn install --immutable

        - name: Build
          run: yarn run pack

        - name: Configure Git
          run: |
            git config --global user.name rajzik-bot
            git config --global user.email silhanu+releasebot@gmail.com
            git config --global init.defaultBranch main

        - name: Publish via Monodeploy (Pre-release)
          if: github.ref != 'refs/heads/main'
          env:
            NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
            GH_TOKEN: ${{ secrets.GH_TOKEN }}
          run: |
            yarn monodeploy \
              --log-level 0 \
              --push \
              --prerelease

        - name: Publish via Monodeploy
          if: github.ref == 'refs/heads/main'
          env:
            NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
            GH_TOKEN: ${{ secrets.GH_TOKEN }}
          run: |
            yarn monodeploy \
              --log-level 0 \
              --changelog-filename "<packageDir>/CHANGELOG.md" \
              --persist-versions \
              --auto-commit \
              --auto-commit-message "internal: Release configs [skip ci]." \
              --plugins "@monodeploy/plugin-github" \
              --push

        - name: Upload Artifacts
          uses: actions/upload-artifact@v2
          with:
            name: build-artifacts
            path: ${{ env.ARTIFACT_DIR }}
